/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package admin;

import config.Session;
import config.dbConnector;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author milan
 */
public class NewLoad extends javax.swing.JFrame {

    /**
     * Creates new form AddLoad
     */
    public NewLoad() {
        initComponents();
    }
    
    public boolean duplicateLoadCheck(String loadId, String cargo, String destination) {
    dbConnector dbc = new dbConnector();
    
    try {
        // Modify the query to check for duplicates in tbl_loads based on load_id, cargo, or destination
        String query = "SELECT * FROM tbl_loads WHERE load_id = '" + loadId + "' OR cargo = '" + cargo + "' OR destination = '" + destination + "'";
        ResultSet resultSet = dbc.getData(query);
        
        if (resultSet.next()) {
            String existingLoadId = resultSet.getString("load_id");
            if (existingLoadId.equals(loadId)) {
                JOptionPane.showMessageDialog(null, "Load ID is already used!");
                return true;
            }

            String existingCargo = resultSet.getString("cargo");
            if (existingCargo.equals(cargo)) {
                JOptionPane.showMessageDialog(null, "Cargo is already used!");
                return true;
            }

            String existingDestination = resultSet.getString("destination");
            if (existingDestination.equals(destination)) {
                JOptionPane.showMessageDialog(null, "Destination is already used!");
                return true;
            }
        }
    } catch (SQLException ex) {
        System.out.println("Error: " + ex.getMessage());
    }
    
    return false; // No duplicate found
}

    public void logEvent(int userId, String username, String description) {
    dbConnector dbc = new dbConnector();
    Connection con = dbc.getConnection();
    PreparedStatement pstmt = null;

    try {
        // Fixed: include `log_description` in your INSERT
        String sql = "INSERT INTO tbl_log (u_id, u_username, login_time, u_type, log_status, log_description) VALUES (?, ?, ?, ?, ?, ?)";
        pstmt = con.prepareStatement(sql);

        pstmt.setInt(1, userId);
        pstmt.setString(2, username);
        pstmt.setTimestamp(3, new Timestamp(new Date().getTime())); // login_time
        pstmt.setString(4, "Success - User Action"); // u_type (general category)
        pstmt.setString(5, "Active"); // log_status
        pstmt.setString(6, description); // log_description (e.g., "User Reset Their Password")

        pstmt.executeUpdate();
        System.out.println("Log event recorded successfully.");
    } catch (SQLException e) {
        System.out.println("Error recording log: " + e.getMessage());
    } finally {
        try {
            if (pstmt != null) pstmt.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error closing resources: " + e.getMessage());
        }
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        loadID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cg = new javax.swing.JTextField();
        dt = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        wt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 255)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 255)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setText("Load ID         :");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 130, 30));

        loadID.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        loadID.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        loadID.setEnabled(false);
        loadID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadIDActionPerformed(evt);
            }
        });
        jPanel1.add(loadID, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 160, 30));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setText("Cargo            :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 130, 30));

        cg.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        jPanel1.add(cg, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 160, 30));

        dt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        jPanel1.add(dt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, 160, 30));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel4.setText("Destination   :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 130, 30));

        wt.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        wt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wtActionPerformed(evt);
            }
        });
        jPanel1.add(wt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 160, 30));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setText("Weight           :");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 130, 30));

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 0, 204));
        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 100, 30));

        jButton2.setBackground(new java.awt.Color(0, 0, 204));
        jButton2.setText("UPDATE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 100, 30));

        jButton3.setBackground(new java.awt.Color(0, 0, 204));
        jButton3.setText("DELETE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 100, 30));

        jButton4.setBackground(new java.awt.Color(0, 0, 204));
        jButton4.setText("CANCEL");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 100, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 380));

        jPanel4.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 204)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setText("NEW LOAD");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, -1, 70));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 180, 70));

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, 610, 380));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 660, 430));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    dbConnector dbc = new dbConnector();
Session sess = Session.getInstance();
String user = sess.getUsername();
int userId = sess.getUid(); // Logged-in admin

// Fields for load information
String cargo = cg.getText().trim();
String destination = dt.getText().trim();
String weight = wt.getText().trim();

// Validation
if (cargo.isEmpty() || destination.isEmpty() || weight.isEmpty()) {
    JOptionPane.showMessageDialog(null, "Please fill all fields.");
    return;
} else if (!weight.matches("^[0-9]+$")) { 
    JOptionPane.showMessageDialog(null, "Enter a valid weight.");
    return;
}

try (Connection conn = dbc.getConnection()) {
    // Insert the new load
    String insertLoadQuery = "INSERT INTO tbl_loads (cargo, destination, weight, status) VALUES (?, ?, ?, ?)";
    
    try (PreparedStatement pst = conn.prepareStatement(insertLoadQuery)) {
        pst.setString(1, cargo);
        pst.setString(2, destination);
        pst.setString(3, weight);
        pst.setString(4, "Pending");

        int rowsInserted = pst.executeUpdate();

        if (rowsInserted > 0) {
            // Insert the log only if load insertion was successful
            String logQuery = "INSERT INTO tbl_log (u_id, u_username, u_type, log_status, log_description) VALUES (?, ?, ?, ?, ?)";
            
            try (PreparedStatement logPst = conn.prepareStatement(logQuery)) {
                logPst.setInt(1, userId);
                logPst.setString(2, user);
                logPst.setString(3, sess.getType());
                logPst.setString(4, "Active");
                logPst.setString(5, "Admin Added a New Load: " + cargo);
                logPst.executeUpdate();
            }

            // Only ONE success message after everything
            JOptionPane.showMessageDialog(null, "Admin Added a New Load Successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);

            new LoadForm().setVisible(true);
            this.dispose(); 
        } else {
            JOptionPane.showMessageDialog(null, "Failed to Add Load.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
} catch (Exception ex) {
    JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
}

     
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
 String loadId = loadID.getText().trim();  // Load ID
    String cargo = cg.getText().trim();        // Cargo
    String destination = dt.getText().trim();  // Destination
    String weight = wt.getText().trim();       // Weight

    // Validation
    if (loadId.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Error: Load ID is missing.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (cargo.isEmpty() || destination.isEmpty() || weight.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Error: Cargo, Destination, and Weight are required.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    try {
        dbConnector dbc = new dbConnector();
        
        // Check if the Load ID already exists in the table
        String checkQuery = "SELECT COUNT(*) FROM tbl_loads WHERE load_id = ?";

        try (Connection conn = dbc.getConnection(); PreparedStatement pst = conn.prepareStatement(checkQuery)) {
            pst.setString(1, loadId);

            try (ResultSet rs = pst.executeQuery()) {
                if (rs.next() && rs.getInt(1) == 0) {
                    JOptionPane.showMessageDialog(this, "Load ID not found! Please check the ID and try again.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Update the load details in the database
            String updateQuery = "UPDATE tbl_loads SET cargo = ?, destination = ?, weight = ? WHERE load_id = ?";

            try (PreparedStatement updatePst = conn.prepareStatement(updateQuery)) {
                updatePst.setString(1, cargo);          // Set cargo field
                updatePst.setString(2, destination);    // Set destination field
                updatePst.setString(3, weight);         // Set weight field
                updatePst.setString(4, loadId);         // Set load ID for the record to be updated

                int updated = updatePst.executeUpdate();
                if (updated > 0) {
                    JOptionPane.showMessageDialog(this, "Load updated successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    new LoadForm().setVisible(true); // Open the load form to see the updated loads
                    this.dispose();  // Close the current form
                } else {
                    JOptionPane.showMessageDialog(this, "Update failed!", "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } catch (HeadlessException ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }      // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         adminDashboard ads = new adminDashboard();
        ads.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void loadIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loadIDActionPerformed

    private void wtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wtActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewLoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewLoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewLoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewLoad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewLoad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField cg;
    public javax.swing.JTextField dt;
    public javax.swing.JButton jButton1;
    public javax.swing.JButton jButton2;
    public javax.swing.JButton jButton3;
    public javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    public javax.swing.JTextField loadID;
    public javax.swing.JTextField wt;
    // End of variables declaration//GEN-END:variables
}
